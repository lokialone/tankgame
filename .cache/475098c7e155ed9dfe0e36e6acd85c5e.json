{"dependencies":[{"name":"./util.js","loc":{"line":1,"column":17}},{"name":"./const.js","loc":{"line":2,"column":26}},{"name":"./bullet.js","loc":{"line":3,"column":19}},{"name":"./tank.js","loc":{"line":4,"column":17}},{"name":"./npc-tank.js","loc":{"line":5,"column":22}},{"name":"./img/heart.png","loc":{"line":20,"column":32}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _util = require(\"./util.js\");\n\nvar _util2 = _interopRequireDefault(_util);\n\nvar _const = require(\"./const.js\");\n\nvar _bullet = require(\"./bullet.js\");\n\nvar _bullet2 = _interopRequireDefault(_bullet);\n\nvar _tank = require(\"./tank.js\");\n\nvar _tank2 = _interopRequireDefault(_tank);\n\nvar _npcTank = require(\"./npc-tank.js\");\n\nvar _npcTank2 = _interopRequireDefault(_npcTank);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar TankGame = function (p) {\n  const EDGE_MIN = 40;\n  var tank = '';\n  var enemyTank = [];\n  var enemyTankCounts = 10;\n  var score = 0;\n  var heart;\n  var scoreSound;\n  var lives;\n  var restartButton;\n  var start = true;\n\n  p.preload = function () {\n    heart = p.loadImage(require('./img/heart.png'));\n    // scoreSound = p.loadSound('../audio/score.mp3');\n  };\n  p.setup = function () {\n    lives = 3;\n    p.createCanvas(800, 640);\n    p.background(224);\n    p.fill(255, 204, 0);\n    tank = new _tank2.default();\n    tank.setLocation(p.width / 2, p.height - 60);\n\n    for (var i = 0; i < enemyTankCounts; i++) {\n      enemyTank[i] = new _npcTank2.default(EDGE_MIN, p.width - EDGE_MIN, p.height - EDGE_MIN);\n      enemyTank[i].createRandom(_util2.default.randomRange(EDGE_MIN, p.width), _util2.default.randomRange(EDGE_MIN, p.height - EDGE_MIN));\n      enemyTank[i].initBullets();\n    }\n  };\n  p.draw = function () {\n    if (start) {\n      p.background(224);\n\n      // 控制tank的方向\n      controlTankDirection(p);\n      tank.render(p);\n\n      // render enemytank\n      for (var i = 0; i < enemyTank.length; i++) {\n        enemyTank[i].bulletsRender(p);\n        enemyTank[i].autoMove(p);\n      }\n      showScore(score);\n      showlives(lives);\n      addEnemyTank();\n      enemyTankGetShoted();\n      tankGetScore();\n      tankGetShoted();\n      // enemyTanksgetCollisioned();\n    } else {\n      p.clear();\n      p.textSize(36);\n      p.text(\"Your Score is: \" + score, p.width / 2, p.height / 2);\n    }\n  };\n\n  p.keyPressed = function () {\n    if (p.keyCode === p.CONTROL) {\n      tank.slotBullet();\n    }\n  };\n\n  function controlTankDirection() {\n    if (p.keyIsDown(p.LEFT_ARROW)) {\n      tank.goLeft();\n    }\n    if (p.keyIsDown(p.UP_ARROW)) {\n      tank.goUp();\n    }\n    if (p.keyIsDown(p.DOWN_ARROW)) {\n      tank.goDown();\n    }\n    if (p.keyIsDown(p.RIGHT_ARROW)) {\n      tank.goRight();\n    }\n  }\n  function showScore(score) {\n    p.textSize(24);\n    p.text(\"Score: \" + score, 30, 50);\n  }\n  function showlives(lives) {\n    switch (lives) {\n      case 3:\n        p.image(heart, 650, 30);\n        p.image(heart, 690, 30);\n        p.image(heart, 730, 30);\n        break;\n      case 2:\n        p.image(heart, 690, 30);\n        p.image(heart, 730, 30);\n        break;\n      case 1:\n        p.image(heart, 730, 30);\n        break;\n      case 0:\n        start = false;\n        break;\n    }\n  }\n  function renderEnemyTank() {}\n\n  function enemyTankGetShoted() {\n    // 判断子弹击中enemyTank\n    for (var i = 0; i < tank.bullets.length; i++) {\n      for (var j = 0; j < enemyTank.length; j++) {\n        if (tank.bullets[i].checkShot(enemyTank[j].x, enemyTank[j].y, tank.tankWidth / 2, p)) {\n          score++;\n          enemyTank.splice(j, 1);\n        }\n      }\n    }\n  }\n  function tankGetScore() {\n    for (var i = 0; i < tank.bullets.length; i++) {\n      if (tank.bullets[i].x <= 0 || tank.bullets[i].y <= 0 || tank.bullets[i].x >= p.width || tank.bullets[i] <= p.height) {\n        tank.bullets.splice(i, 1);\n      }\n    }\n  }\n  function tankGetShoted() {\n    // 判断tank是否被击中\n    for (var i = enemyTank.length - 1; i >= 0; i--) {\n      if (p.dist(enemyTank[i].bullet.x, enemyTank[i].bullet.y, tank.x, tank.y) <= tank.tankWidth / 2) {\n        lives--;\n        enemyTank[i].bullet.init(enemyTank[i].x, enemyTank[i].y, enemyTank[i].direction);\n      }\n    }\n  }\n  function addEnemyTank() {\n    if (enemyTank.length < enemyTankCounts) {\n      enemyTank.push(new _npcTank2.default(EDGE_MIN, p.width - EDGE_MIN, p.height - EDGE_MIN));\n      enemyTank[enemyTank.length - 1].createRandom(_util2.default.randomRange(EDGE_MIN, p.width), _util2.default.randomRange(EDGE_MIN, p.height - EDGE_MIN));\n      enemyTank[enemyTank.length - 1].initBullets();\n    }\n  }\n\n  function enemyTanksgetCollisioned() {\n    for (var i = 0, len = enemyTank.length; i < len; i++) {\n      for (var j = i + 1; j < len; j++) {\n        if (enemyTank[i].checkCollision(enemyTank[j].x, enemyTank[j].y, p)) {\n\n          enemyTank[i].changeDirctionWhenCollision();\n        }\n      }\n    }\n  }\n};\n\nexports.default = TankGame;"},"hash":"e78822ad2a17f1ef3c9cc24de392a5bf"}